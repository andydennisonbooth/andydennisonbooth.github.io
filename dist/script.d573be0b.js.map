{"version":3,"sources":["js/script.js"],"names":["document","addEventListener","game","Game","render","canvas","getElementById","foreground","stepHz","cellSize","seedRatio","colorMap","dead","reviving","dying","alive","first","cells","method","bind","init","stretch","seed","updateCells","paint","x","width","y","height","Math","random","setTimeout","requestAnimationFrame","offsetWidth","offsetHeight","xCells","ceil","yCells","length","push","pop","forEach","col","newCells","newCol","cell","includes","neighbors","neighborsOf","aliveNeighbors","reduce","count","Number","nextState","i","j","mod","drawCell","color","ctx","strokeStyle","fillStyle","fillRect","getContext","n","m"],"mappings":";;;;;;AACAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL;AACH,CAHD;;IAKMD;AACF,kBAAc;AAAA;;AACV,SAAKE,MAAL,GAAcL,QAAQ,CAACM,cAAT,CAAwB,QAAxB,CAAd;AACA,SAAKC,UAAL,GAAkBP,QAAQ,CAACM,cAAT,CAAwB,YAAxB,CAAlB;AAEA,SAAKE,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,QAAL,GAAgB;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZC,MAAAA,QAAQ,EAAE,SAFE;AAGZC,MAAAA,KAAK,EAAE,SAHK;AAIZC,MAAAA,KAAK,EAAE;AAJK,KAAhB;AAOA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,KAAL,GAAa,EAAb;;AAEA,4BAAmB,CAAC,QAAD,EAAW,SAAX,CAAnB;AAAK,UAAIC,MAAM,WAAV;AAAqC,WAAKA,MAAL,IAAe,KAAKA,MAAL,EAAaC,IAAb,CAAkB,IAAlB,CAAf;AAA1C;;AAEA,SAAKC,IAAL;AACH;;;;2BAcM;AACH,WAAKC,OAAL;AACA,WAAKC,IAAL;AACA,WAAKC,WAAL;AACA,WAAKC,KAAL;AACH;;;2BAEM;AACH,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAIE,IAAI,CAACC,MAAL,KAAgB,KAAKpB,SAAzB,EAAoC,KAAKO,KAAL,CAAWQ,CAAX,EAAcE,CAAd,IAAmB,OAAnB;AACvC;AACJ;AACJ;;;6BAEQ;AAAA;;AACL,WAAKN,OAAL;AACA,WAAKE,WAAL;AACA,WAAKC,KAAL;AACAO,MAAAA,UAAU,CAAC;AAAA,eAAMC,qBAAqB,CAAC,KAAI,CAAC5B,MAAN,CAA3B;AAAA,OAAD,EAA2C,OAAO,KAAKI,MAAvD,CAAV;AACH;;;8BAES;AACN,UAAMkB,KAAK,GAAG,KAAKnB,UAAL,CAAgB0B,WAA9B;AACA,UAAML,MAAM,GAAG,KAAKrB,UAAL,CAAgB2B,YAA/B;AAEA,WAAK7B,MAAL,CAAYqB,KAAZ,GAAoBA,KAApB;AACA,WAAKrB,MAAL,CAAYuB,MAAZ,GAAqBA,MAArB;AAEA,UAAMO,MAAM,GAAGN,IAAI,CAACO,IAAL,CAAUV,KAAK,GAAG,KAAKjB,QAAvB,CAAf;AACA,UAAM4B,MAAM,GAAGR,IAAI,CAACO,IAAL,CAAUR,MAAM,GAAG,KAAKnB,QAAxB,CAAf;;AAEA,aAAO,KAAKQ,KAAL,CAAWqB,MAAX,GAAoBH,MAA3B;AAAmC,aAAKlB,KAAL,CAAWsB,IAAX,CAAgB,EAAhB;AAAnC;;AACA,aAAO,KAAKtB,KAAL,CAAWqB,MAAX,GAAoBH,MAA3B;AAAmC,aAAKlB,KAAL,CAAWuB,GAAX;AAAnC;;AAEA,aAAO,CAAC,sBAAKvB,KAAL,CAAW,CAAX,+DAAeqB,MAAf,KAAyB,CAA1B,IAA+BD,MAAtC;AAAA;;AAA8C,aAAKpB,KAAL,CAAWwB,OAAX,CAAmB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACH,IAAJ,CAAS,MAAT,CAAJ;AAAA,SAAtB;AAA9C;;AACA,aAAO,CAAC,uBAAKtB,KAAL,CAAW,CAAX,iEAAeqB,MAAf,KAAyB,CAA1B,IAA+BD,MAAtC;AAAA;;AAA8C,aAAKpB,KAAL,CAAWwB,OAAX,CAAmB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACF,GAAJ,EAAJ;AAAA,SAAtB;AAA9C;AACH;;;kCAEa;AACV,WAAKvB,KAAL,GAAa,KAAK0B,QAAL,EAAb;AACH;;;+BAEU;AACP,UAAMA,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAMiB,GAAG,GAAG,KAAKzB,KAAL,CAAWQ,CAAX,CAAZ;AACA,YAAMmB,MAAM,GAAG,EAAf;;AAEA,aAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAMkB,IAAI,GAAGH,GAAG,CAACf,CAAD,CAAhB;AACA,cAAMZ,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB+B,QAAnB,CAA4BD,IAA5B,CAAd;AACA,cAAME,SAAS,GAAGC,WAAW,CAAC,KAAK/B,KAAN,EAAaQ,CAAb,EAAgBE,CAAhB,CAA7B;AACA,cAAMsB,cAAc,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAACC,KAAD,EAAQN,IAAR;AAAA,mBAAiBM,KAAK,GAAGC,MAAM,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmBN,QAAnB,CAA4BD,IAA5B,CAAD,CAA/B;AAAA,WAAjB,EAAqF,CAArF,CAAvB;AAEA,cAAIQ,SAAS,SAAb;;AACA,cAAItC,KAAJ,EAAW;AACPsC,YAAAA,SAAS,GAAGJ,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,GAA+C,OAA/C,GAAyD,MAArE;AACH,WAFD,MAEO;AACHI,YAAAA,SAAS,GAAGJ,cAAc,KAAK,CAAnB,GAAuB,OAAvB,GAAiC,MAA7C;AACH;;AAEDL,UAAAA,MAAM,CAACL,IAAP,CAAYc,SAAZ;AACH;;AAEDV,QAAAA,QAAQ,CAACJ,IAAT,CAAcK,MAAd;AACH;;AAED,WAAK,IAAInB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKC,KAAzB,EAAgCD,EAAC,EAAjC,EAAqC;AACjC,YAAMiB,IAAG,GAAGC,QAAQ,CAAClB,EAAD,CAApB;;AAEA,aAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKC,MAAzB,EAAiCD,EAAC,EAAlC,EAAsC;AAClC,cAAMkB,KAAI,GAAGH,IAAG,CAACf,EAAD,CAAhB;;AACA,cAAMoB,UAAS,GAAGC,WAAW,CAACL,QAAD,EAAWlB,EAAX,EAAcE,EAAd,CAA7B;;AACA,cAAMsB,eAAc,GAAGF,UAAS,CAACG,MAAV,CAAiB,UAACC,KAAD,EAAQN,IAAR;AAAA,mBAAiBM,KAAK,GAAGC,MAAM,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmBN,QAAnB,CAA4BD,IAA5B,CAAD,CAA/B;AAAA,WAAjB,EAAqF,CAArF,CAAvB;;AAEA,cAAIA,KAAI,KAAK,OAAT,IAAoBI,eAAc,KAAK,CAAvC,IAA4CA,eAAc,KAAK,CAAnE,EAAsE;AAClEP,YAAAA,IAAG,CAACf,EAAD,CAAH,GAAS,OAAT;AACH,WAFD,MAEO,IAAIkB,KAAI,KAAK,MAAT,IAAmBI,eAAc,KAAK,CAA1C,EAA6C;AAChDP,YAAAA,IAAG,CAACf,EAAD,CAAH,GAAS,UAAT;AACH;AACJ;AACJ;;AAED,aAAOgB,QAAP;AACH;;;gCAEWlB,GAAGE,GAAG;AACd,UAAMoB,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,aAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,cAAID,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAArB,EAAwB;AAExBR,UAAAA,SAAS,CAACR,IAAV,CAAe,KAAKtB,KAAL,CAAWuC,GAAG,CAAC/B,CAAC,GAAG6B,CAAL,EAAQ,KAAK5B,KAAb,CAAd,EAAmC8B,GAAG,CAAC7B,CAAC,GAAG4B,CAAL,EAAQ,KAAK3B,MAAb,CAAtC,CAAf;AACH;AACJ;;AAED,aAAOmB,SAAP;AACH;;;4BAEO;AACJ,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAMiB,GAAG,GAAG,KAAKzB,KAAL,CAAWQ,CAAX,CAAZ;;AAEA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAMkB,IAAI,GAAGH,GAAG,CAACf,CAAD,CAAhB;AACA,eAAK8B,QAAL,CAAchC,CAAd,EAAiBE,CAAjB,EAAoB,KAAKhB,QAAL,CAAckC,IAAd,CAApB;AACH;AACJ;AACJ;;;6BAEQpB,GAAGE,GAAG+B,OAAO;AAClB,WAAKC,GAAL,CAASC,WAAT,GAAuBF,KAAvB;AACA,WAAKC,GAAL,CAASE,SAAT,GAAqBH,KAArB;AACA,WAAKC,GAAL,CAASG,QAAT,CAAkBrC,CAAC,GAAG,KAAKhB,QAA3B,EAAqCkB,CAAC,GAAG,KAAKlB,QAA9C,EAAwD,KAAKA,QAA7D,EAAuE,KAAKA,QAA5E;AACH;;;wBA/HS;AACN,aAAO,KAAKJ,MAAL,CAAY0D,UAAZ,CAAuB,IAAvB,CAAP;AACH;;;wBAEW;AACR,aAAO,KAAK9C,KAAL,CAAWqB,MAAlB;AACH;;;wBAEY;AAAA;;AACT,aAAO,uBAAKrB,KAAL,CAAW,CAAX,iEAAeqB,MAAf,KAAyB,CAAhC;AACH;;;;;;AAwHL,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAAC/B,KAAD,EAAQQ,CAAR,EAAWE,CAAX,EAAiB;AAAA;;AACjC,MAAMD,KAAK,GAAGT,KAAK,CAACqB,MAApB;AACA,MAAMV,MAAM,GAAG,YAAAX,KAAK,CAAC,CAAD,CAAL,oDAAUqB,MAAV,KAAoB,CAAnC;AAEA,MAAMS,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,SAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAID,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAArB,EAAwB;AAExBR,MAAAA,SAAS,CAACR,IAAV,CAAetB,KAAK,CAACuC,GAAG,CAAC/B,CAAC,GAAG6B,CAAL,EAAQ5B,KAAR,CAAJ,CAAL,CAAyB8B,GAAG,CAAC7B,CAAC,GAAG4B,CAAL,EAAQ3B,MAAR,CAA5B,CAAf;AACH;AACJ;;AAED,SAAOmB,SAAP;AACH,CAdD;;AAgBA,IAAMS,GAAG,GAAG,SAANA,GAAM,CAACQ,CAAD,EAAIC,CAAJ;AAAA,SAAUD,CAAC,GAAG,CAAJ,GAAQ,CAACC,CAAC,GAAGD,CAAL,IAAUC,CAAlB,GAAsBD,CAAC,GAAGC,CAApC;AAAA,CAAZ","file":"script.d573be0b.js","sourceRoot":"../src","sourcesContent":["\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const game = new Game();\n    game.render();\n});\n\nclass Game {\n    constructor() {\n        this.canvas = document.getElementById('canvas');\n        this.foreground = document.getElementById('foreground');\n\n        this.stepHz = 10;\n        this.cellSize = 14;\n        this.seedRatio = 0.15;\n        this.colorMap = {\n            dead: '#ffffff',\n            reviving: '#fbfbfb',\n            dying: '#f7f7f7',\n            alive: '#f3f3f3'\n        };\n\n        this.first = true;\n        this.cells = [];\n\n        for (let method of ['render', 'stretch']) this[method] = this[method].bind(this);\n\n        this.init();\n    }\n\n    get ctx() {\n        return this.canvas.getContext('2d');\n    }\n\n    get width() {\n        return this.cells.length;\n    }\n\n    get height() {\n        return this.cells[0]?.length || 0;\n    }\n\n    init() {\n        this.stretch();\n        this.seed();\n        this.updateCells();\n        this.paint()\n    }\n\n    seed() {\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                if (Math.random() < this.seedRatio) this.cells[x][y] = 'alive';\n            }\n        }\n    }\n\n    render() {\n        this.stretch();\n        this.updateCells();\n        this.paint();\n        setTimeout(() => requestAnimationFrame(this.render), 1000 / this.stepHz);\n    }\n\n    stretch() {\n        const width = this.foreground.offsetWidth;\n        const height = this.foreground.offsetHeight;\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        const xCells = Math.ceil(width / this.cellSize);\n        const yCells = Math.ceil(height / this.cellSize);\n\n        while (this.cells.length < xCells) this.cells.push([]);\n        while (this.cells.length > xCells) this.cells.pop();\n\n        while ((this.cells[0]?.length || 0) < yCells) this.cells.forEach(col => col.push('dead'));\n        while ((this.cells[0]?.length || 0) > yCells) this.cells.forEach(col => col.pop());\n    }\n\n    updateCells() {\n        this.cells = this.newCells();\n    }\n\n    newCells() {\n        const newCells = [];\n        for (let x = 0; x < this.width; x++) {\n            const col = this.cells[x];\n            const newCol = [];\n\n            for (let y = 0; y < this.height; y++) {\n                const cell = col[y];\n                const alive = ['alive', 'dying'].includes(cell);\n                const neighbors = neighborsOf(this.cells, x, y);\n                const aliveNeighbors = neighbors.reduce((count, cell) => count + Number(['alive', 'dying'].includes(cell)), 0);\n\n                let nextState;\n                if (alive) {\n                    nextState = aliveNeighbors === 2 || aliveNeighbors === 3 ? 'alive' : 'dead';\n                } else {\n                    nextState = aliveNeighbors === 3 ? 'alive' : 'dead';\n                }\n\n                newCol.push(nextState);\n            }\n\n            newCells.push(newCol);\n        }\n\n        for (let x = 0; x < this.width; x++) {\n            const col = newCells[x];\n\n            for (let y = 0; y < this.height; y++) {\n                const cell = col[y];\n                const neighbors = neighborsOf(newCells, x, y);\n                const aliveNeighbors = neighbors.reduce((count, cell) => count + Number(['alive', 'dying'].includes(cell)), 0);\n\n                if (cell === 'alive' && aliveNeighbors !== 2 && aliveNeighbors !== 3) {\n                    col[y] = 'dying';\n                } else if (cell === 'dead' && aliveNeighbors === 3) {\n                    col[y] = 'reviving';\n                }\n            }\n        }\n\n        return newCells;\n    }\n\n    neighborsOf(x, y) {\n        const neighbors = [];\n        for (let i = -1; i <= 1; i++) {\n            for (let j = -1; j <= 1; j++) {\n                if (i === 0 && j === 0) continue;\n\n                neighbors.push(this.cells[mod(x + i, this.width)][mod(y + j, this.height)]);\n            }\n        }\n\n        return neighbors;\n    }\n\n    paint() {\n        for (let x = 0; x < this.width; x++) {\n            const col = this.cells[x];\n\n            for (let y = 0; y < this.height; y++) {\n                const cell = col[y];\n                this.drawCell(x, y, this.colorMap[cell]);\n            }\n        }\n    }\n\n    drawCell(x, y, color) {\n        this.ctx.strokeStyle = color;\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x * this.cellSize, y * this.cellSize, this.cellSize, this.cellSize);\n    }\n}\n\nconst neighborsOf = (cells, x, y) => {\n    const width = cells.length;\n    const height = cells[0]?.length || 0;\n\n    const neighbors = [];\n    for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n            if (i === 0 && j === 0) continue;\n\n            neighbors.push(cells[mod(x + i, width)][mod(y + j, height)]);\n        }\n    }\n\n    return neighbors;\n};\n\nconst mod = (n, m) => n < 0 ? (m + n) % m : n % m;\n"]}